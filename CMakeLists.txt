# Main CMake file for NativeSolid project

PROJECT(NativeSolid)
CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/../bin CACHE PATH
                        "Single output directory for building all libraries.")
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/../bin CACHE PATH
                        "Single output directory for building all executables.")
MARK_AS_ADVANCED(LIBRARY_OUTPUT_PATH EXECUTABLE_OUTPUT_PATH)

set(CMAKE_MACOSX_RPATH ON)
set(CMAKE_SKIP_BUILD_RPATH FALSE)
set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)


# Type of build
IF( NOT CMAKE_BUILD_TYPE )
  SET( CMAKE_BUILD_TYPE Release CACHE STRING "" FORCE )
ENDIF()
MESSAGE(STATUS "Build type : ${CMAKE_BUILD_TYPE}")

LIST(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMake")

# -- C++11
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

# -- CBLAS/LAPACKE --
FIND_PACKAGE(LAPACKE REQUIRED)
FIND_PACKAGE(CBLAS)

# -- Python --
IF (CMAKE_VERSION VERSION_LESS 3.12.0)
    FIND_PACKAGE(PythonInterp 3.6 REQUIRED)
    FIND_PACKAGE(PythonLibs 3.6 REQUIRED)
ELSE()
    find_package (Python3 COMPONENTS Interpreter Development)
    # use Python3_ROOT_DIR if wrong python found (e.g. anaconda)
    SET(PYTHON_EXECUTABLE ${Python3_EXECUTABLE})
    SET(PYTHON_LIBRARIES ${Python3_LIBRARIES})
    SET(PYTHON_INCLUDE_PATH ${Python3_INCLUDE_DIRS}) 
    SET(PYTHONLIBS_VERSION_STRING ${Python3_VERSION})     
ENDIF()
MESSAGE(STATUS "PYTHON_EXECUTABLE:FILEPATH=${PYTHON_EXECUTABLE}")
MESSAGE(STATUS "PYTHON_LIBRARIES:FILEPATH=${PYTHON_LIBRARIES}")
MESSAGE(STATUS "PYTHON_INCLUDE_PATH:FILEPATH=${PYTHON_INCLUDE_PATH}")
MESSAGE(STATUS "PYTHON_FRAMEWORK_INCLUDES=${PYTHON_FRAMEWORK_INCLUDES}")
MESSAGE(STATUS "PYTHONLIBS_VERSION_STRING=${PYTHONLIBS_VERSION_STRING}")
MESSAGE(STATUS "Python_FRAMEWORKS=${Python_FRAMEWORKS}")

# -- SWIG --
FIND_PACKAGE(SWIG REQUIRED)
SET(CMAKE_SWIG_OUTDIR "${EXECUTABLE_OUTPUT_PATH}")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include 
                    ${PROJECT_SOURCE_DIR}/api 
                    ${LAPACKE_INCLUDE_DIR} 
                    ${CBLAS_INCLUDE_DIR} 
                    ${PYTHON_INCLUDE_PATH}
)

# -- Sub directories --
ADD_SUBDIRECTORY( src )
ADD_SUBDIRECTORY( _api )

